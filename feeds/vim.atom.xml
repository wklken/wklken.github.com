<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wklken's blog - vim</title><link href="http://www.wklken.me/" rel="alternate"></link><link href="http://www.wklken.me/feeds/vim.atom.xml" rel="self"></link><id>http://www.wklken.me/</id><updated>2015-06-13T12:16:00+08:00</updated><entry><title>vim插件: surround &amp; repeat[成对符号编辑]</title><link href="http://www.wklken.me/posts/2015/06/13/vim-plugin-surround-repeat.html" rel="alternate"></link><published>2015-06-13T12:16:00+08:00</published><updated>2015-06-13T12:16:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-13:/posts/2015/06/13/vim-plugin-surround-repeat.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="surround"&gt;surround&lt;/h2&gt;
&lt;p&gt;作用: 快速给词加环绕符号,例如单引号/双引号/括号/成对标签等&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tpope/vim-surround'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="shi-yong"&gt;使用&lt;/h3&gt;
&lt;p&gt;注意(括号, 左括号会加空格, 右括号不会)&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 替换: cs"'
"Hello world!" -&amp;gt; 'Hello world!'

# 替换-标签(t=tag): cst"
&lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  -&amp;gt; "abc"

cst&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  -&amp;gt; &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

# 删除: ds"
"Hello world!" -&amp;gt; Hello world!

# 添加 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="surround"&gt;surround&lt;/h2&gt;
&lt;p&gt;作用: 快速给词加环绕符号,例如单引号/双引号/括号/成对标签等&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tpope/vim-surround'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="shi-yong"&gt;使用&lt;/h3&gt;
&lt;p&gt;注意(括号, 左括号会加空格, 右括号不会)&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 替换: cs"'
"Hello world!" -&amp;gt; 'Hello world!'

# 替换-标签(t=tag): cst"
&lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  -&amp;gt; "abc"

cst&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;  -&amp;gt; &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;abc&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

# 删除: ds"
"Hello world!" -&amp;gt; Hello world!

# 添加(ys=you surround): ysiw"
Hello -&amp;gt; "Hello"

# 添加: csw"
Hello -&amp;gt; "Hello"

# 添加-整行: yss"
Hello world -&amp;gt; "Hello world"

# ySS"
Hello world -&amp;gt;
"
    hello world
"

# 添加-两个词: veeS"
hello world -&amp;gt; "hello world"

# 添加-当前到行尾: ys$"

# 左符号/右符号 =&amp;gt; 带不带空格
cs([
(hello) -&amp;gt; [ hello ]

cs(]
(hello) -&amp;gt; [hello]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="surround.gif" src="/imgs/vim/surround.gif"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim-repeat_1"&gt;vim-repeat&lt;/h2&gt;
&lt;p&gt;作用: 重复一个插件的操作, 支持surround.vim, 通过 surround 操作之后的行为, &lt;code&gt;.&lt;/code&gt;号重复&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tpope/vim-repeat"&gt;vim-repeat&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang_1"&gt;安装&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;" for repeat -&amp;gt; enhance surround.vim, . to repeat command
Bundle 'tpope/vim-repeat'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="shi-yong_1"&gt;使用&lt;/h3&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="repeat.gif" src="/imgs/vim/repeat.gif"/&gt;&lt;/p&gt;
&lt;h3 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="jian-yi"&gt;建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;善用&lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repeat&lt;/code&gt;同时还支持的插件 &lt;a href="https://github.com/tpope/vim-repeat#repeatvim"&gt;doc&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: gundo[时光机]</title><link href="http://www.wklken.me/posts/2015/06/13/vim-plugin-gundo.html" rel="alternate"></link><published>2015-06-13T10:37:00+08:00</published><updated>2015-06-13T10:37:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-13:/posts/2015/06/13/vim-plugin-gundo.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;有时候编辑一半, 特别是删除了一些东西, 然后想找回, 但是没有存下来(只在脑子里有)
这时候时光机就发挥作用了&lt;/p&gt;
&lt;p&gt;作用: 文件时光机, 可以查看同一个文件之前的历史内容&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/sjl/gundo.vim"&gt;gundo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'sjl/gundo.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键&lt;code&gt;&amp;lt;leader&amp;gt;h&lt;/code&gt;作为&lt;code&gt;toggle&lt;/code&gt;, 进入之后&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j/k   上下选择
p     查看diff
回车  回滚文件到这个时刻的版本
&amp;lt;leader&amp;gt;h  关闭(或者wq关闭gundo打开的窗口)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意, 你可以跳进预览, 复制一些东西出来, 不必走回滚&lt;/p&gt;
&lt;p&gt;&lt;img alt="gundo.gif" src="/imgs/vim/gundo.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nnoremap &amp;lt;leader&amp;gt;h :GundoToggle&amp;lt;CR&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;只要写过的, 都能找回来&lt;/li&gt;
&lt;li&gt;同类插件 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;有时候编辑一半, 特别是删除了一些东西, 然后想找回, 但是没有存下来(只在脑子里有)
这时候时光机就发挥作用了&lt;/p&gt;
&lt;p&gt;作用: 文件时光机, 可以查看同一个文件之前的历史内容&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/sjl/gundo.vim"&gt;gundo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'sjl/gundo.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键&lt;code&gt;&amp;lt;leader&amp;gt;h&lt;/code&gt;作为&lt;code&gt;toggle&lt;/code&gt;, 进入之后&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j/k   上下选择
p     查看diff
回车  回滚文件到这个时刻的版本
&amp;lt;leader&amp;gt;h  关闭(或者wq关闭gundo打开的窗口)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意, 你可以跳进预览, 复制一些东西出来, 不必走回滚&lt;/p&gt;
&lt;p&gt;&lt;img alt="gundo.gif" src="/imgs/vim/gundo.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nnoremap &amp;lt;leader&amp;gt;h :GundoToggle&amp;lt;CR&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;只要写过的, 都能找回来&lt;/li&gt;
&lt;li&gt;同类插件 &lt;a href="https://github.com/mbbill/undotree"&gt;undotree&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: expand-region[区域选中]</title><link href="http://www.wklken.me/posts/2015/06/13/vim-plugin-expandregion.html" rel="alternate"></link><published>2015-06-13T10:21:00+08:00</published><updated>2015-06-13T10:21:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-13:/posts/2015/06/13/vim-plugin-expandregion.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 视图模式下可伸缩选中部分，用于快速选中某些块&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/terryma/vim-expand-region"&gt;expand-region&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-expand-region'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="shi-yong"&gt;使用&lt;/h3&gt;
&lt;p&gt;自定义key&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;v 增加选中范围
V 减少选中范围
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="expand-region.gif" src="/imgs/vim/expand-region.gif"/&gt;&lt;/p&gt;
&lt;h3 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-expand-region'
vmap v &amp;lt;Plug&amp;gt;(expand_region_expand)
vmap V &amp;lt;Plug&amp;gt;(expand_region_shrink)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="jian-yi"&gt;建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;培养使用&lt;code&gt;v&lt;/code&gt;/&lt;code&gt;V&lt;/code&gt;进行区块选中的习惯, 避免每次多敲键位&lt;/li&gt;
&lt;li&gt;可以进行选中规则的自定义, 具体见 &lt;a href="https://github.com/terryma/vim-expand-region#customize-selected-regions"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 视图模式下可伸缩选中部分，用于快速选中某些块&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/terryma/vim-expand-region"&gt;expand-region&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-expand-region'
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="shi-yong"&gt;使用&lt;/h3&gt;
&lt;p&gt;自定义key&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;v 增加选中范围
V 减少选中范围
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="expand-region.gif" src="/imgs/vim/expand-region.gif"/&gt;&lt;/p&gt;
&lt;h3 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-expand-region'
vmap v &amp;lt;Plug&amp;gt;(expand_region_expand)
vmap V &amp;lt;Plug&amp;gt;(expand_region_shrink)
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="jian-yi"&gt;建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;培养使用&lt;code&gt;v&lt;/code&gt;/&lt;code&gt;V&lt;/code&gt;进行区块选中的习惯, 避免每次多敲键位&lt;/li&gt;
&lt;li&gt;可以进行选中规则的自定义, 具体见 &lt;a href="https://github.com/terryma/vim-expand-region#customize-selected-regions"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: quickrun[快速执行]</title><link href="http://www.wklken.me/posts/2015/06/13/vim-plugin-quickrun.html" rel="alternate"></link><published>2015-06-13T10:09:00+08:00</published><updated>2015-06-13T10:09:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-13:/posts/2015/06/13/vim-plugin-quickrun.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 快速执行当前文件, 例如&lt;em&gt;.py/&lt;/em&gt;.rb/*.sh等等, 用于快速验证一些代码实现&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/thinca/vim-quickrun"&gt;vim-quickrun&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'thinca/vim-quickrun'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;配置使用&lt;code&gt;message&lt;/code&gt;进行结果展示, 即, 展示运行结果后, 按任意键回到vim编辑&lt;/p&gt;
&lt;p&gt;同时, 映射&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;以及&lt;code&gt;F10&lt;/code&gt;快捷键&lt;/p&gt;
&lt;p&gt;在快速编写验证性代码时非常有用&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="quick-run.gif" src="/imgs/vim/quick-run.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'thinca/vim-quickrun'
let g:quickrun_config = {
\   "_" : {
\       "outputter" : "message",
\   },
\}

let g:quickrun_no_default_key_mappings = 1
nmap &amp;lt;Leader&amp;gt;r &amp;lt;Plug&amp;gt;(quickrun …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 快速执行当前文件, 例如&lt;em&gt;.py/&lt;/em&gt;.rb/*.sh等等, 用于快速验证一些代码实现&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/thinca/vim-quickrun"&gt;vim-quickrun&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'thinca/vim-quickrun'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;配置使用&lt;code&gt;message&lt;/code&gt;进行结果展示, 即, 展示运行结果后, 按任意键回到vim编辑&lt;/p&gt;
&lt;p&gt;同时, 映射&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;以及&lt;code&gt;F10&lt;/code&gt;快捷键&lt;/p&gt;
&lt;p&gt;在快速编写验证性代码时非常有用&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="quick-run.gif" src="/imgs/vim/quick-run.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'thinca/vim-quickrun'
let g:quickrun_config = {
\   "_" : {
\       "outputter" : "message",
\   },
\}

let g:quickrun_no_default_key_mappings = 1
nmap &amp;lt;Leader&amp;gt;r &amp;lt;Plug&amp;gt;(quickrun)
map &amp;lt;F10&amp;gt; :QuickRun&amp;lt;CR&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;p&gt;无&lt;/p&gt;</content><category term="vim"></category></entry><entry><title>vim插件: trailing-whitespace[行尾空格处理]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-trailing-whitespace.html" rel="alternate"></link><published>2015-06-07T18:16:00+08:00</published><updated>2015-06-07T18:16:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-trailing-whitespace.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;没有什么太多需要讲的, 功能+一个快捷键&lt;/p&gt;
&lt;p&gt;代码洁癖/强迫症必备&lt;/p&gt;
&lt;p&gt;作用: 高亮行末空格(标红), 也可以一键去除文件中所有行行尾空格&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/bronson/vim-trailing-whitespace"&gt;vim-trailing-whitespace&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bronson/vim-trailing-whitespace'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能: 自动标记行尾的空格&lt;/p&gt;
&lt;p&gt;&lt;img alt="trailing-whitespace.png" src="/imgs/vim/trailing-whitespace.png"/&gt;&lt;/p&gt;
&lt;p&gt;主动技能: 绑定&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&lt;/code&gt;为快捷键, 一键去除所有行尾空格
(&lt;code&gt;k-vim&lt;/code&gt;中为&lt;code&gt;,空格&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="trailing-whitespace.gif" src="/imgs/vim/trailing-whitespace.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bronson/vim-trailing-whitespace'
map &amp;lt;leader&amp;gt;&amp;lt;space&amp;gt; :FixWhitespace&amp;lt;cr&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;没有什么太多需要讲的, 功能+一个快捷键&lt;/p&gt;
&lt;p&gt;代码洁癖/强迫症必备&lt;/p&gt;
&lt;p&gt;作用: 高亮行末空格(标红), 也可以一键去除文件中所有行行尾空格&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/bronson/vim-trailing-whitespace"&gt;vim-trailing-whitespace&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bronson/vim-trailing-whitespace'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能: 自动标记行尾的空格&lt;/p&gt;
&lt;p&gt;&lt;img alt="trailing-whitespace.png" src="/imgs/vim/trailing-whitespace.png"/&gt;&lt;/p&gt;
&lt;p&gt;主动技能: 绑定&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&lt;/code&gt;为快捷键, 一键去除所有行尾空格
(&lt;code&gt;k-vim&lt;/code&gt;中为&lt;code&gt;,空格&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="trailing-whitespace.gif" src="/imgs/vim/trailing-whitespace.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bronson/vim-trailing-whitespace'
map &amp;lt;leader&amp;gt;&amp;lt;space&amp;gt; :FixWhitespace&amp;lt;cr&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="vim"></category></entry><entry><title>vim插件: closetag[成对标签补全]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-closetag.html" rel="alternate"></link><published>2015-06-07T18:15:00+08:00</published><updated>2015-06-07T18:15:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-closetag.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;如果日常开发中要编辑xml和html文件, 一个字符一个字符敲是不聪明地, 虽然你可以这么做...&lt;/p&gt;
&lt;p&gt;作用: 编辑xml/html时, 自动补全闭合标签&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/docunext/closetag.vim"&gt;closetag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'docunext/closetag.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 自动补全&lt;/p&gt;
&lt;p&gt;&lt;img alt="closetag.gif" src="/imgs/vim/closetag.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'docunext/closetag.vim'
let g:closetag_html_style=1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;被动技能, 越简单越好, 当然如果你要用这个来写前端代码, 是远远不够的, 你可能需要&lt;a href="https://github.com/mattn/emmet-vim"&gt;emmet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;如果日常开发中要编辑xml和html文件, 一个字符一个字符敲是不聪明地, 虽然你可以这么做...&lt;/p&gt;
&lt;p&gt;作用: 编辑xml/html时, 自动补全闭合标签&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/docunext/closetag.vim"&gt;closetag&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'docunext/closetag.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 自动补全&lt;/p&gt;
&lt;p&gt;&lt;img alt="closetag.gif" src="/imgs/vim/closetag.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'docunext/closetag.vim'
let g:closetag_html_style=1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;被动技能, 越简单越好, 当然如果你要用这个来写前端代码, 是远远不够的, 你可能需要&lt;a href="https://github.com/mattn/emmet-vim"&gt;emmet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: ctrlp[文件搜索]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-ctrlp.html" rel="alternate"></link><published>2015-06-07T18:14:00+08:00</published><updated>2015-06-07T18:14:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-ctrlp.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;使用频率最高的插件之一&lt;/p&gt;
&lt;p&gt;作用: 模糊搜索, 可以搜索文件/buffer/mru/tag等等&lt;/p&gt;
&lt;p&gt;github: 原始&lt;a href="https://github.com/kien/ctrlp.vim"&gt;kien/ctrlp&lt;/a&gt;, 使用的是国人改进版本 &lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrlpvim/ctrlp.vim&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'ctrlpvim/ctrlp.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;-f&lt;/code&gt;模糊搜索最近打开的文件(MRU)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;-p&lt;/code&gt;模糊搜索当前目录及其子目录下的所有文件&lt;/p&gt;
&lt;p&gt;搜索框出来后, 输入关键字, 然后&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ctrl + j/k 进行上下选择

ctrl + x 在当前窗口水平分屏打开文件

ctrl + v 同上, 垂直分屏

ctrl + t 在tab中打开
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="ctrlp.gif" src="/imgs/vim/ctrlp.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;使用频率最高的插件之一&lt;/p&gt;
&lt;p&gt;作用: 模糊搜索, 可以搜索文件/buffer/mru/tag等等&lt;/p&gt;
&lt;p&gt;github: 原始&lt;a href="https://github.com/kien/ctrlp.vim"&gt;kien/ctrlp&lt;/a&gt;, 使用的是国人改进版本 &lt;a href="https://github.com/ctrlpvim/ctrlp.vim"&gt;ctrlpvim/ctrlp.vim&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'ctrlpvim/ctrlp.vim'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;-f&lt;/code&gt;模糊搜索最近打开的文件(MRU)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;-p&lt;/code&gt;模糊搜索当前目录及其子目录下的所有文件&lt;/p&gt;
&lt;p&gt;搜索框出来后, 输入关键字, 然后&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ctrl + j/k 进行上下选择

ctrl + x 在当前窗口水平分屏打开文件

ctrl + v 同上, 垂直分屏

ctrl + t 在tab中打开
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="ctrlp.gif" src="/imgs/vim/ctrlp.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'ctrlpvim/ctrlp.vim'
let g:ctrlp_map = '&amp;lt;leader&amp;gt;p'
let g:ctrlp_cmd = 'CtrlP'
map &amp;lt;leader&amp;gt;f :CtrlPMRU&amp;lt;CR&amp;gt;
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn|rvm)$',
    \ 'file': '\v\.(exe|so|dll|zip|tar|tar.gz|pyc)$',
    \ }
let g:ctrlp_working_path_mode=0
let g:ctrlp_match_window_bottom=1
let g:ctrlp_max_height=15
let g:ctrlp_match_window_reversed=0
let g:ctrlp_mruf_max=500
let g:ctrlp_follow_symlinks=1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="qi-ta"&gt;其他&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;更多操作, 详见 &lt;a href="https://github.com/ctrlpvim/ctrlp.vim#once-ctrlp-is-open"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;可以考虑废弃&lt;code&gt;fuzzyfinder&lt;/code&gt; / &lt;code&gt;Command-T&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以考虑只用一个快捷键, 配置映射到&lt;code&gt;:CtrlPMixed&lt;/code&gt;, 就可以一键搜索文件/buffer/mru&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="fu-ctrlpde-cha-jian-ctrlp-funky"&gt;附: ctrlp的插件&lt;code&gt;ctrlp-funky&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;作用: 模糊搜索当前文件中所有函数&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tacahiroy/ctrlp-funky"&gt;ctrlp-funky&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang_1"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tacahiroy/ctrlp-funky'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong_1"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fu&lt;/code&gt; 进入当前文件的函数列表搜索&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fU&lt;/code&gt; 搜索当前光标下单词对应的函数&lt;/p&gt;
&lt;p&gt;&lt;img alt="ctrlp-funky.gif" src="/imgs/vim/ctrlp-funky.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi_1"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tacahiroy/ctrlp-funky'
nnoremap &amp;lt;Leader&amp;gt;fu :CtrlPFunky&amp;lt;Cr&amp;gt;
" narrow the list down with a word under cursor
nnoremap &amp;lt;Leader&amp;gt;fU :execute 'CtrlPFunky ' . expand('&amp;lt;cword&amp;gt;')&amp;lt;Cr&amp;gt;
let g:ctrlp_funky_syntax_highlight = 1

let g:ctrlp_extensions = ['funky']
&lt;/pre&gt;&lt;/div&gt;</content><category term="vim"></category></entry><entry><title>vim插件: airline[状态栏增强]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-airline.html" rel="alternate"></link><published>2015-06-07T18:13:00+08:00</published><updated>2015-06-07T18:13:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-airline.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 状态栏增强展示&lt;/p&gt;
&lt;p&gt;github:&lt;a href="https://github.com/bling/vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前用过powline, 最终切到airline&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bling/vim-airline'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;状态栏增强, 集成支持ctrlp/nerdtree/tagbar等一些列插件&lt;a href="https://github.com/bling/vim-airline#features"&gt;features&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;airline.png&lt;/p&gt;
&lt;p&gt;&lt;img alt="airline_1.png" src="/imgs/vim/airline_1.png"/&gt;
&lt;img alt="airline_2.png" src="/imgs/vim/airline_2.png"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bling/vim-airline'
if !exists('g:airline_symbols')
let g:airline_symbols = {}
endif
let g:airline_left_sep = '▶'
let g:airline_left_alt_sep = '❯'
let g:airline_right_sep = '◀'
let g:airline_right_alt_sep = '❮'
let g:airline_symbols.linenr = '¶'
let g …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 状态栏增强展示&lt;/p&gt;
&lt;p&gt;github:&lt;a href="https://github.com/bling/vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前用过powline, 最终切到airline&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bling/vim-airline'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;状态栏增强, 集成支持ctrlp/nerdtree/tagbar等一些列插件&lt;a href="https://github.com/bling/vim-airline#features"&gt;features&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;airline.png&lt;/p&gt;
&lt;p&gt;&lt;img alt="airline_1.png" src="/imgs/vim/airline_1.png"/&gt;
&lt;img alt="airline_2.png" src="/imgs/vim/airline_2.png"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'bling/vim-airline'
if !exists('g:airline_symbols')
let g:airline_symbols = {}
endif
let g:airline_left_sep = '▶'
let g:airline_left_alt_sep = '❯'
let g:airline_right_sep = '◀'
let g:airline_right_alt_sep = '❮'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'

" 是否打开tabline
" let g:airline#extensions#tabline#enabled = 1
&lt;/pre&gt;&lt;/div&gt;</content><category term="vim"></category></entry><entry><title>vim插件: theme[主题]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-theme.html" rel="alternate"></link><published>2015-06-07T18:12:00+08:00</published><updated>2015-06-07T18:12:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-theme.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;主题, 在&lt;code&gt;k-vim&lt;/code&gt;中, 默认配置了两个&lt;/p&gt;
&lt;h3 id="1-solarize"&gt;1. solarize&lt;/h3&gt;
&lt;p&gt;github: &lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;solarized&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="solarized.png" src="/imgs/vim/solarized.png"/&gt;&lt;/p&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'altercation/vim-colors-solarized'
let g:solarized_termtrans=1
let g:solarized_contrast="normal"
let g:solarized_visibility="normal"
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="2-molokai"&gt;2. molokai&lt;/h3&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tomasr/molokai"&gt;molokai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="molokai.png" src="/imgs/vim/molokai.png"/&gt;&lt;/p&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tomasr/molokai'
" monokai原始背景色
let g:molokai_original = 1
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="qi-yong"&gt;启用:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Bundle&lt;/code&gt;之后安装, 仅仅是安装, 要启用哪个主题, 需要在&lt;code&gt;vimrc&lt;/code&gt;中显式指定&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set background …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;主题, 在&lt;code&gt;k-vim&lt;/code&gt;中, 默认配置了两个&lt;/p&gt;
&lt;h3 id="1-solarize"&gt;1. solarize&lt;/h3&gt;
&lt;p&gt;github: &lt;a href="https://github.com/altercation/vim-colors-solarized"&gt;solarized&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="solarized.png" src="/imgs/vim/solarized.png"/&gt;&lt;/p&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'altercation/vim-colors-solarized'
let g:solarized_termtrans=1
let g:solarized_contrast="normal"
let g:solarized_visibility="normal"
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="2-molokai"&gt;2. molokai&lt;/h3&gt;
&lt;p&gt;github: &lt;a href="https://github.com/tomasr/molokai"&gt;molokai&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="molokai.png" src="/imgs/vim/molokai.png"/&gt;&lt;/p&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'tomasr/molokai'
" monokai原始背景色
let g:molokai_original = 1
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="qi-yong"&gt;启用:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Bundle&lt;/code&gt;之后安装, 仅仅是安装, 要启用哪个主题, 需要在&lt;code&gt;vimrc&lt;/code&gt;中显式指定&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set background=dark
set t_Co=256
colorscheme solarized
" colorscheme molokai
" colorscheme desert
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="jian-yi"&gt;建议&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;有包含大部分主题的插件, 但是就个人而言, 够用就行, 所以&lt;code&gt;k-vim&lt;/code&gt;中只保留了两个, 曾经习惯&lt;code&gt;monokai&lt;/code&gt;, 后来转到&lt;code&gt;solarized&lt;/code&gt;, 自己喜欢的才是最好的&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: tagbar[大纲式导航]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-tagbar.html" rel="alternate"></link><published>2015-06-07T18:11:00+08:00</published><updated>2015-06-07T18:11:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-tagbar.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;tagbar&lt;/code&gt;, 可以将正在编辑的文件生成一个大纲, 包含类/方法/变量等, 可以选中快速跳转到目标位置, 编辑大文件特别有用.&lt;/p&gt;
&lt;p&gt;评价: 五星&lt;/p&gt;
&lt;p&gt;作用: 大纲式快速导航&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/majutsushi/tagbar"&gt;tagbar&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;p&gt;首先, vim必须是7.0以上&lt;/p&gt;
&lt;p&gt;安装依赖 &lt;a href="http://ctags.sourceforge.net/"&gt;Exuberant ctags&lt;/a&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ubuntu
sudo apt-get install ctags

# centos
sudo yum install ctags

# mac
brew install ctags
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在vim中安装&lt;code&gt;tagbar&lt;/code&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'majutsushi/tagbar'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;k-vim&lt;/code&gt;中配置快捷键为&lt;code&gt;F9&lt;/code&gt;, 编辑文件时按&lt;code&gt;F9&lt;/code&gt;, 进入, 上下移动 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;code&gt;tagbar&lt;/code&gt;, 可以将正在编辑的文件生成一个大纲, 包含类/方法/变量等, 可以选中快速跳转到目标位置, 编辑大文件特别有用.&lt;/p&gt;
&lt;p&gt;评价: 五星&lt;/p&gt;
&lt;p&gt;作用: 大纲式快速导航&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/majutsushi/tagbar"&gt;tagbar&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;p&gt;首先, vim必须是7.0以上&lt;/p&gt;
&lt;p&gt;安装依赖 &lt;a href="http://ctags.sourceforge.net/"&gt;Exuberant ctags&lt;/a&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# ubuntu
sudo apt-get install ctags

# centos
sudo yum install ctags

# mac
brew install ctags
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在vim中安装&lt;code&gt;tagbar&lt;/code&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'majutsushi/tagbar'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;k-vim&lt;/code&gt;中配置快捷键为&lt;code&gt;F9&lt;/code&gt;, 编辑文件时按&lt;code&gt;F9&lt;/code&gt;, 进入, 上下移动(&lt;code&gt;jk&lt;/code&gt;)), 选中回车后会跳转&lt;/p&gt;
&lt;p&gt;如果安装了i &lt;a href="http://www.wklken.me/posts/2015/06/07/vim-plugin-easymotion.html"&gt;easymotion&lt;/a&gt;, 还可以使用其快速跳转&lt;/p&gt;
&lt;p&gt;&lt;img alt="tagbar.gif" src="/imgs/vim/tagbar.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'majutsushi/tagbar'
nmap &amp;lt;F9&amp;gt; :TagbarToggle&amp;lt;CR&amp;gt;
" 启动时自动focus
let g:tagbar_autofocus = 1

" for ruby, delete if you do not need
let g:tagbar_type_ruby = {
    \ 'kinds' : [
        \ 'm:modules',
        \ 'c:classes',
        \ 'd:describes',
        \ 'C:contexts',
        \ 'f:methods',
        \ 'F:singleton methods'
    \ ]
\ }
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;只配置一个快捷键, 可以根据需要定制具体语言的&lt;code&gt;tagbar&lt;/code&gt;展示内容. &lt;a href="https://github.com/majutsushi/tagbar/wiki"&gt;文档地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;建议废弃&lt;code&gt;taglist&lt;/code&gt;(年久失修了), &lt;code&gt;ctrlp&lt;/code&gt;+&lt;code&gt;tagbar&lt;/code&gt;实际使用效果更好&lt;/li&gt;
&lt;li&gt;如果在写&lt;code&gt;golang&lt;/code&gt;的时候要用到&lt;code&gt;tagbar&lt;/code&gt;, 需要安装&lt;code&gt;gotags&lt;/code&gt;支持&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: nerdcommenter[快速注释]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-nerdcommenter.html" rel="alternate"></link><published>2015-06-07T18:10:00+08:00</published><updated>2015-06-07T18:10:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-nerdcommenter.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;最经常用的插件之一&lt;/p&gt;
&lt;p&gt;作用: 快速注释/解开注释&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;nerdcommenter&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/nerdcommenter'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;使用默认的快捷键, 不需要自己绑定&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;leader&amp;gt;cc   加注释
&amp;lt;leader&amp;gt;cu   解开注释

&amp;lt;leader&amp;gt;c&amp;lt;space&amp;gt;  加上/解开注释, 智能判断
&amp;lt;leader&amp;gt;cy   先复制, 再注解(p可以进行黏贴)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="nerdcommenter.gif" src="/imgs/vim/nerdcommenter.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/nerdcommenter'
" 注释的时候自动加个空格, 强迫症必配
let g:NERDSpaceDelims=1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;同类插件 &lt;a href="https://github.com/tomtom/tcomment_vim"&gt;tcomment&lt;/a&gt; / &lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;,  有兴趣的话, 可以对比下后者和nerdcommenter&lt;/li&gt;
&lt;li&gt;常用就三四个快捷键, 更多快捷键自取 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;最经常用的插件之一&lt;/p&gt;
&lt;p&gt;作用: 快速注释/解开注释&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;nerdcommenter&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/nerdcommenter'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;使用默认的快捷键, 不需要自己绑定&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;leader&amp;gt;cc   加注释
&amp;lt;leader&amp;gt;cu   解开注释

&amp;lt;leader&amp;gt;c&amp;lt;space&amp;gt;  加上/解开注释, 智能判断
&amp;lt;leader&amp;gt;cy   先复制, 再注解(p可以进行黏贴)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="nerdcommenter.gif" src="/imgs/vim/nerdcommenter.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/nerdcommenter'
" 注释的时候自动加个空格, 强迫症必配
let g:NERDSpaceDelims=1
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;同类插件 &lt;a href="https://github.com/tomtom/tcomment_vim"&gt;tcomment&lt;/a&gt; / &lt;a href="https://github.com/tpope/vim-commentary"&gt;vim-commentary&lt;/a&gt;,  有兴趣的话, 可以对比下后者和nerdcommenter&lt;/li&gt;
&lt;li&gt;常用就三四个快捷键, 更多快捷键自取 &lt;a href="https://github.com/scrooloose/nerdcommenter#usage"&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: rainbow_parentheses[括号高亮]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-rainbowparentheses.html" rel="alternate"></link><published>2015-06-07T18:09:00+08:00</published><updated>2015-06-07T18:09:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-rainbowparentheses.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 括号(小括号/中括号/大括号)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/kien/rainbow_parentheses.vim"&gt;rainbow_parentheses.vim&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'kien/rainbow_parentheses.vim' [DONE]
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动(虽然支持主动触发), 可以设定括号高亮展示, 包括&lt;code&gt;()[]{}&amp;lt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="rainbow_parentheses.png" src="/imgs/vim/rainbow_parentheses.png"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'kien/rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue' …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 括号(小括号/中括号/大括号)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/kien/rainbow_parentheses.vim"&gt;rainbow_parentheses.vim&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'kien/rainbow_parentheses.vim' [DONE]
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动(虽然支持主动触发), 可以设定括号高亮展示, 包括&lt;code&gt;()[]{}&amp;lt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="rainbow_parentheses.png" src="/imgs/vim/rainbow_parentheses.png"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'kien/rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

" 不加入这行, 防止黑色括号出现, 很难识别
" \ ['black',       'SeaGreen3'],

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;开启16对括号匹配一般就够了&lt;/li&gt;
&lt;li&gt;可以根据自己需求, 确认&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;是否开启, 具体见github文档&lt;/li&gt;
&lt;li&gt;不建议配置快捷键, 当做被动属性, 省心省事&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: syntastic[语法检查]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-syntastic.html" rel="alternate"></link><published>2015-06-07T18:08:00+08:00</published><updated>2015-06-07T18:08:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-syntastic.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 语法检查, 支持大部分的语言&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/scrooloose/syntastic"&gt;syntastic&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 设置打开时开启, 则打开对应文件的时候, 会自动进行语法检查, 高亮错误位置&lt;/p&gt;
&lt;p&gt;注意, 针对某些具体语言, 指定了checker, 需要对应安装外部依赖, 例如&lt;code&gt;pyflakes&lt;/code&gt;/&lt;code&gt;pep8&lt;/code&gt;/&lt;code&gt;jshint&lt;/code&gt;等等&lt;/p&gt;
&lt;p&gt;主动技能, &lt;code&gt;k-vim&lt;/code&gt;中配置绑定了&lt;code&gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;打开错误列表面板&lt;/p&gt;
&lt;p&gt;&lt;img alt="syntastic.png" src="/imgs/vim/syntastic.png"/&gt;&lt;/p&gt;
&lt;p&gt;默认&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:Errors 显示错误面板
:lnext  到下一个错误
:lprevious 到上一个错误
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
let g:syntastic_error_symbol='&amp;gt;&amp;gt;'
let g:syntastic_warning_symbol='&amp;gt;'
let …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 语法检查, 支持大部分的语言&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/scrooloose/syntastic"&gt;syntastic&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 设置打开时开启, 则打开对应文件的时候, 会自动进行语法检查, 高亮错误位置&lt;/p&gt;
&lt;p&gt;注意, 针对某些具体语言, 指定了checker, 需要对应安装外部依赖, 例如&lt;code&gt;pyflakes&lt;/code&gt;/&lt;code&gt;pep8&lt;/code&gt;/&lt;code&gt;jshint&lt;/code&gt;等等&lt;/p&gt;
&lt;p&gt;主动技能, &lt;code&gt;k-vim&lt;/code&gt;中配置绑定了&lt;code&gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;打开错误列表面板&lt;/p&gt;
&lt;p&gt;&lt;img alt="syntastic.png" src="/imgs/vim/syntastic.png"/&gt;&lt;/p&gt;
&lt;p&gt;默认&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:Errors 显示错误面板
:lnext  到下一个错误
:lprevious 到上一个错误
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
let g:syntastic_error_symbol='&amp;gt;&amp;gt;'
let g:syntastic_warning_symbol='&amp;gt;'
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_enable_highlighting=1
let g:syntastic_python_checkers=['pyflakes'] " 使用pyflakes,速度比pylint快
let g:syntastic_javascript_checkers = ['jsl', 'jshint']
let g:syntastic_html_checkers=['tidy', 'jshint']
" 修改高亮的背景色, 适应主题
highlight SyntasticErrorSign guifg=white guibg=black

" to see error location list
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5
function! ToggleErrors()
    let old_last_winnr = winnr('$')
    lclose
    if old_last_winnr == winnr('$')
        " Nothing was closed, open syntastic error location panel
        Errors
    endif
endfunction
nnoremap &amp;lt;Leader&amp;gt;s :call ToggleErrors()&amp;lt;cr&amp;gt;
" nnoremap &amp;lt;Leader&amp;gt;sn :lnext&amp;lt;cr&amp;gt;
" nnoremap &amp;lt;Leader&amp;gt;sp :lprevious&amp;lt;cr&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;支持语言的列表, 见 &lt;a href="https://github.com/scrooloose/syntastic#1-introduction"&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: delimitmate[符号自动补全]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-delimitmate.html" rel="alternate"></link><published>2015-06-07T18:07:00+08:00</published><updated>2015-06-07T18:07:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-delimitmate.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 自动补全引号(单引号/双引号/反引号), 括号(&lt;code&gt;()[]{}&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/Raimondi/delimitMate"&gt;delimitMate&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'Raimondi/delimitMate'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 在编辑输入的时候触发&lt;/p&gt;
&lt;p&gt;&lt;img alt="delimitmate.gif" src="/imgs/vim/delimitmate.gif"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;问题: 如何在结束输入后, 自动跳转到符号后面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;触发后, 假设你要跳到补全后的符号后面继续编辑, 按&lt;code&gt;Shift-Tab&lt;/code&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 1. 按", 自动补全
"|"

# 2.输入`hello`
"hello|"

# 3. 按 shift-tab, 跳到补全的符号后面, 还是insert-mode
"hello"|
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;" 自动补全单引号，双引号等
Bundle 'Raimondi/delimitMate'

" for python docstring ", 特别有用
au FileType python …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 自动补全引号(单引号/双引号/反引号), 括号(&lt;code&gt;()[]{}&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/Raimondi/delimitMate"&gt;delimitMate&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'Raimondi/delimitMate'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;被动技能, 在编辑输入的时候触发&lt;/p&gt;
&lt;p&gt;&lt;img alt="delimitmate.gif" src="/imgs/vim/delimitmate.gif"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;问题: 如何在结束输入后, 自动跳转到符号后面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;触发后, 假设你要跳到补全后的符号后面继续编辑, 按&lt;code&gt;Shift-Tab&lt;/code&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 1. 按", 自动补全
"|"

# 2.输入`hello`
"hello|"

# 3. 按 shift-tab, 跳到补全的符号后面, 还是insert-mode
"hello"|
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;" 自动补全单引号，双引号等
Bundle 'Raimondi/delimitMate'

" for python docstring ", 特别有用
au FileType python let b:delimitMate_nesting_quotes = ['"']
" 关闭某些类型文件的自动补全
"au FileType mail let b:delimitMate_autoclose = 0
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;有很多款括号等自动补全的插件, 这款在功能和可配上都不错, 需要自定义的可以看文档&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同类插件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;smartinput https://github.com/kana/vim-smartinput
lexima https://github.com/cohama/lexima.vim  类似多光标替换
auto-pairs https://github.com/jiangmiao/auto-pairs
autoclose  https://github.com/Townk/vim-autoclose
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;粘贴代码的时候自动补全括号这个特性怎么去掉?
&lt;/pre&gt;&lt;/div&gt;</content><category term="vim"></category></entry><entry><title>vim插件: matchit[成对标签跳转]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-matchit.html" rel="alternate"></link><published>2015-06-07T18:06:00+08:00</published><updated>2015-06-07T18:06:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-matchit.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;这个插件最后一次更新是2008年, 七年前了......&lt;/p&gt;
&lt;p&gt;vim的&lt;code&gt;%&lt;/code&gt;, 会自动跳转到匹配的&lt;code&gt;()[]{}&amp;lt;&amp;gt;&lt;/code&gt;等符号, 但是在编辑&lt;code&gt;html&lt;/code&gt;和&lt;code&gt;xml&lt;/code&gt;的时候, 可能需要在配对标签直接跳转, 这个插件扩展实现了这个功能.&lt;/p&gt;
&lt;p&gt;作用: &lt;code&gt;%&lt;/code&gt;跳转到匹配的标签&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/vim-scripts/matchit.zip"&gt;matchit&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'vim-scripts/matchit.zip'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在需要跳转的位置按&lt;code&gt;%&lt;/code&gt;, 跳转到匹配位置&lt;/p&gt;
&lt;p&gt;例如 xml/html中支持成对标签之间的跳转&lt;/p&gt;
&lt;p&gt;&lt;img alt="matchit.gif" src="/imgs/vim/matchit.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;" 没错, 只有一行
Bundle 'vim-scripts/matchit.zip'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;根据自己需求确定要不要这个插件, 虽然小, 但是没用的话就不需要装了&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;这个插件最后一次更新是2008年, 七年前了......&lt;/p&gt;
&lt;p&gt;vim的&lt;code&gt;%&lt;/code&gt;, 会自动跳转到匹配的&lt;code&gt;()[]{}&amp;lt;&amp;gt;&lt;/code&gt;等符号, 但是在编辑&lt;code&gt;html&lt;/code&gt;和&lt;code&gt;xml&lt;/code&gt;的时候, 可能需要在配对标签直接跳转, 这个插件扩展实现了这个功能.&lt;/p&gt;
&lt;p&gt;作用: &lt;code&gt;%&lt;/code&gt;跳转到匹配的标签&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/vim-scripts/matchit.zip"&gt;matchit&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'vim-scripts/matchit.zip'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在需要跳转的位置按&lt;code&gt;%&lt;/code&gt;, 跳转到匹配位置&lt;/p&gt;
&lt;p&gt;例如 xml/html中支持成对标签之间的跳转&lt;/p&gt;
&lt;p&gt;&lt;img alt="matchit.gif" src="/imgs/vim/matchit.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;" 没错, 只有一行
Bundle 'vim-scripts/matchit.zip'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;根据自己需求确定要不要这个插件, 虽然小, 但是没用的话就不需要装了&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: easy-align[快速对齐]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-easyalign.html" rel="alternate"></link><published>2015-06-07T18:05:00+08:00</published><updated>2015-06-07T18:05:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-easyalign.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 快速进行对齐/格式化&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/junegunn/vim-easy-align"&gt;vim-easy-align&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'junegunn/vim-easy-align'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键 &lt;code&gt;&amp;lt;leader&amp;gt;a&lt;/code&gt;, 使用&lt;code&gt;V&lt;/code&gt;进入选择, 选取多行, 之后触发&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;,a=        对齐等号表达
,a:        对齐冒号表达式(json/map等)

# 默认左对齐
,a&amp;lt;space&amp;gt;  首个空格对齐
,a2&amp;lt;space&amp;gt; 第二个空格对齐
,a-&amp;lt;space&amp;gt; 倒数第一个空格对齐
,a-2&amp;lt;space&amp;gt; 倒数第二个空格对齐
,a*&amp;lt;space&amp;gt; 所有空格依次对齐

# 右对齐
,a&amp;lt;Enter&amp;gt;*&amp;lt;space&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="easy-align.gif" src="/imgs/vim/easy-align.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'junegunn/vim-easy-align' …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 快速进行对齐/格式化&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/junegunn/vim-easy-align"&gt;vim-easy-align&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'junegunn/vim-easy-align'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;绑定快捷键 &lt;code&gt;&amp;lt;leader&amp;gt;a&lt;/code&gt;, 使用&lt;code&gt;V&lt;/code&gt;进入选择, 选取多行, 之后触发&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;,a=        对齐等号表达
,a:        对齐冒号表达式(json/map等)

# 默认左对齐
,a&amp;lt;space&amp;gt;  首个空格对齐
,a2&amp;lt;space&amp;gt; 第二个空格对齐
,a-&amp;lt;space&amp;gt; 倒数第一个空格对齐
,a-2&amp;lt;space&amp;gt; 倒数第二个空格对齐
,a*&amp;lt;space&amp;gt; 所有空格依次对齐

# 右对齐
,a&amp;lt;Enter&amp;gt;*&amp;lt;space&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="easy-align.gif" src="/imgs/vim/easy-align.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'junegunn/vim-easy-align'
vmap &amp;lt;Leader&amp;gt;a &amp;lt;Plug&amp;gt;(EasyAlign)
nmap &amp;lt;Leader&amp;gt;a &amp;lt;Plug&amp;gt;(EasyAlign)
if !exists('g:easy_align_delimiters')
  let g:easy_align_delimiters = {}
endif
let g:easy_align_delimiters['#'] = { 'pattern': '#', 'ignore_groups': ['String'] }
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;同类插件 &lt;a href="https://github.com/godlygeek/tabular"&gt;tabular&lt;/a&gt;
, 个人觉得&lt;code&gt;vim-easy-align&lt;/code&gt;更符合直觉, 更新频繁, 文档, 教程也更全, &lt;a href="https://github.com/junegunn/vim-easy-align/blob/master/EXAMPLES.md"&gt;例子&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: multiple-cursors[多光标操作]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-multiplecursors.html" rel="alternate"></link><published>2015-06-07T18:03:00+08:00</published><updated>2015-06-07T18:03:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-multiplecursors.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 类似sublimetext的多光标选中&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim=multiple-cursors&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-multiple-cursors'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;默认快捷键&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ctrl+m 选中一个
ctrl+p 放弃一个, 回到上一个
ctrl+x 跳过当前选中, 选中下一个
esc    退出
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="multiple-cursors.gif" src="/imgs/vim/multiple-cursors.gif"/&gt;&lt;/p&gt;
&lt;p&gt;选中后, 可以进行增删替换&lt;code&gt;a/c/x&lt;/code&gt;等&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
" Default mapping
let g:multi_cursor_next_key='&amp;lt;C-m&amp;gt;'
let g:multi_cursor_prev_key='&amp;lt;C-p …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 类似sublimetext的多光标选中&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim=multiple-cursors&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-multiple-cursors'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;默认快捷键&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ctrl+m 选中一个
ctrl+p 放弃一个, 回到上一个
ctrl+x 跳过当前选中, 选中下一个
esc    退出
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="multiple-cursors.gif" src="/imgs/vim/multiple-cursors.gif"/&gt;&lt;/p&gt;
&lt;p&gt;选中后, 可以进行增删替换&lt;code&gt;a/c/x&lt;/code&gt;等&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
" Default mapping
let g:multi_cursor_next_key='&amp;lt;C-m&amp;gt;'
let g:multi_cursor_prev_key='&amp;lt;C-p&amp;gt;'
let g:multi_cursor_skip_key='&amp;lt;C-x&amp;gt;'
let g:multi_cursor_quit_key='&amp;lt;Esc&amp;gt;'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;p&gt;无&lt;/p&gt;</content><category term="vim"></category></entry><entry><title>vim插件: vim-signature[快速标记跳转]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-signature.html" rel="alternate"></link><published>2015-06-07T18:02:00+08:00</published><updated>2015-06-07T18:02:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-signature.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 标签展示以及快速跳转(增强vim的书签功能)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/kshenoy/vim-signature"&gt;signature&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle "kshenoy/vim-signature"
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;使用默认快捷键&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;m[a-zA-Z]   打标签
'[a-zA-Z]   跳转到标签位置

'.          最后一次变更的地方
''          跳回来的地方(最近两个位置跳转)

m&amp;lt;space&amp;gt;    去除所有标签
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="signature.gif" src="/imgs/vim/signature.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle "kshenoy/vim-signature"
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;p&gt;无&lt;/p&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;作用: 标签展示以及快速跳转(增强vim的书签功能)&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/kshenoy/vim-signature"&gt;signature&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle "kshenoy/vim-signature"
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;使用默认快捷键&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;m[a-zA-Z]   打标签
'[a-zA-Z]   跳转到标签位置

'.          最后一次变更的地方
''          跳回来的地方(最近两个位置跳转)

m&amp;lt;space&amp;gt;    去除所有标签
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="signature.gif" src="/imgs/vim/signature.gif"/&gt;&lt;/p&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle "kshenoy/vim-signature"
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;p&gt;无&lt;/p&gt;</content><category term="vim"></category></entry><entry><title>vim插件: easymotion[快速跳转]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-easymotion.html" rel="alternate"></link><published>2015-06-07T18:01:00+08:00</published><updated>2015-06-07T18:01:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-easymotion.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;说明: &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;全局映射为&lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除却&lt;code&gt;hjkl&lt;/code&gt;, &lt;code&gt;gg&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;Ctrl-D/U&lt;/code&gt;, 以及 &lt;code&gt;[f/F]&amp;lt;char&amp;gt;&lt;/code&gt;和&lt;code&gt;[t/T]&amp;lt;char&amp;gt;&lt;/code&gt;这些&lt;code&gt;vim&lt;/code&gt;默认的移动方式&lt;/p&gt;
&lt;p&gt;有没有更高效的移动做法么? 回答是肯定的&lt;/p&gt;
&lt;p&gt;这个插件的唯一目的就是: 快速跳转&lt;/p&gt;
&lt;p&gt;作用: 如何进行更快速的光标移动&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'Lokaltog/vim-easymotion'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="yong-fa-1-tiao-zhuan-dao-dang-qian-guang-biao-qian-hou-de-wei-zhi-wb"&gt;用法1: 跳转到当前光标前后的位置(w/b)&lt;/h2&gt;
&lt;p&gt;快捷键&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;(即&lt;code&gt;,,w&lt;/code&gt;)和&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;b&lt;/code&gt;(即&lt;code&gt;,,b …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;说明: &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;全局映射为&lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除却&lt;code&gt;hjkl&lt;/code&gt;, &lt;code&gt;gg&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;Ctrl-D/U&lt;/code&gt;, 以及 &lt;code&gt;[f/F]&amp;lt;char&amp;gt;&lt;/code&gt;和&lt;code&gt;[t/T]&amp;lt;char&amp;gt;&lt;/code&gt;这些&lt;code&gt;vim&lt;/code&gt;默认的移动方式&lt;/p&gt;
&lt;p&gt;有没有更高效的移动做法么? 回答是肯定的&lt;/p&gt;
&lt;p&gt;这个插件的唯一目的就是: 快速跳转&lt;/p&gt;
&lt;p&gt;作用: 如何进行更快速的光标移动&lt;/p&gt;
&lt;p&gt;github: &lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'Lokaltog/vim-easymotion'
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="yong-fa-1-tiao-zhuan-dao-dang-qian-guang-biao-qian-hou-de-wei-zhi-wb"&gt;用法1: 跳转到当前光标前后的位置(w/b)&lt;/h2&gt;
&lt;p&gt;快捷键&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;(即&lt;code&gt;,,w&lt;/code&gt;)和&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;b&lt;/code&gt;(即&lt;code&gt;,,b&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;助记: &lt;code&gt;word&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion_base.gif" src="/imgs/vim/easy_motion_base.gif"/&gt;&lt;/p&gt;
&lt;p&gt;easy_motion_base.gif&lt;/p&gt;
&lt;h2 id="yong-fa-2-sou-suo-tiao-zhuan-s"&gt;用法2: 搜索跳转(s)&lt;/h2&gt;
&lt;p&gt;快捷键&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;s&lt;/code&gt;(即&lt;code&gt;,,s&lt;/code&gt;), 然后输入要搜索的字母, 这个跳转是双向的&lt;/p&gt;
&lt;p&gt;助记: &lt;code&gt;search&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion_search.gif" src="/imgs/vim/easy_motion_search.gif"/&gt;&lt;/p&gt;
&lt;h2 id="yong-fa-3-xing-ji-tiao-zhuan-jk"&gt;用法3: 行级跳转(jk)&lt;/h2&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;map &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;j &amp;lt;Plug&amp;gt;(easymotion-j)
map &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;k &amp;lt;Plug&amp;gt;(easymotion-k)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;快捷键: &lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;j&lt;/code&gt;和&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;k&lt;/code&gt;(即&lt;code&gt;,,j&lt;/code&gt;和&lt;code&gt;,,k&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;助记: &lt;code&gt;hjkl&lt;/code&gt;不解释&lt;/p&gt;
&lt;p&gt;演示:&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion_lines.gif" src="/imgs/vim/easy_motion_lines.gif"/&gt;&lt;/p&gt;
&lt;h2 id="yong-fa-4-xing-nei-tiao-zhuan-hl"&gt;用法4: 行内跳转(hl)&lt;/h2&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;h &amp;lt;Plug&amp;gt;(easymotion-linebackward)
map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;l &amp;lt;Plug&amp;gt;(easymotion-lineforward)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;快捷键&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;h&lt;/code&gt;和&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;l&lt;/code&gt;(即&lt;code&gt;,,h&lt;/code&gt;和&lt;code&gt;,,l&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;助记: &lt;code&gt;hjkl&lt;/code&gt;不解释&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion_inline.gif" src="/imgs/vim/easy_motion_inline.gif"/&gt;&lt;/p&gt;
&lt;h2 id="yong-fa-5-zhong-fu-shang-yi-ci-dong-zuo"&gt;用法5: 重复上一次动作(.)&lt;/h2&gt;
&lt;p&gt;配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;. &amp;lt;Plug&amp;gt;(easymotion-repeat)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;快捷键&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;助记: 同&lt;code&gt;repeat&lt;/code&gt;插件....&lt;/p&gt;
&lt;p&gt;&lt;img alt="easy_motion_repeat.gif" src="/imgs/vim/easy_motion_repeat.gif"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="zui-zhong-pei-zhi"&gt;最终配置&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'Lokaltog/vim-easymotion'
let g:EasyMotion_smartcase = 1
"let g:EasyMotion_startofline = 0 " keep cursor colum when JK motion
map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;h &amp;lt;Plug&amp;gt;(easymotion-linebackward)
map &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;j &amp;lt;Plug&amp;gt;(easymotion-j)
map &amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;k &amp;lt;Plug&amp;gt;(easymotion-k)
map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;l &amp;lt;Plug&amp;gt;(easymotion-lineforward)
" 重复上一次操作, 类似repeat插件, 很强大
map &amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;. &amp;lt;Plug&amp;gt;(easymotion-repeat)
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="jian-yi"&gt;建议&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;还可以&lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;f&lt;/code&gt;和&lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;t&lt;/code&gt;, 不过建议简单化, 一个&lt;code&gt;&amp;lt;Leader&amp;gt;&amp;lt;leader&amp;gt;w/b&lt;/code&gt;走天下.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你不经常使用&lt;code&gt;s&lt;/code&gt;, 可以将&lt;code&gt;s&lt;/code&gt;改键, &lt;code&gt;nmap s &amp;lt;Plug&amp;gt;(easymotion-s)&lt;/code&gt;, 这样你只需要输入&lt;code&gt;s&lt;/code&gt;就可以进行搜索快速跳转(强迫症表示不能忍....)
具体做法见&lt;a href="https://github.com/Lokaltog/vim-easymotion#bidirectional-motions"&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;&lt;/code&gt;作为这个插件的快捷键其实挺好的, 貌似没有其他插件会导致冲突, 还可以配置一整套, 强迫症很满意&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以配置2/n个字符的搜索跳转, 更精准, 按需自取(个人觉得太复杂了没必要) &lt;a href="https://github.com/Lokaltog/vim-easymotion#2-character-search-motion"&gt;文档&lt;/a&gt;和&lt;a href="https://github.com/Lokaltog/vim-easymotion#n-character-search-motion"&gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个插件专心做好跳转就好, 没必要把搜索的活给做了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>vim插件: vundle[管理插件]</title><link href="http://www.wklken.me/posts/2015/06/07/vim-plugin-vundle.html" rel="alternate"></link><published>2015-06-07T18:00:00+08:00</published><updated>2015-06-07T18:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-06-07:/posts/2015/06/07/vim-plugin-vundle.html</id><summary type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;第一个需要手动安装的插件, 其他的插件通过这个来进行管理&lt;/p&gt;
&lt;p&gt;作用: 管理其他所有插件(安装/更新/移除)&lt;/p&gt;
&lt;p&gt;github:&lt;a href="https://github.com/gmarik/Vundle.vim"&gt;vundle&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vi
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;.vimrc&lt;/code&gt;中加入/修改/删除自己需要的插件配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后, 在命令行模式下运行&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:BundleInstall     install 安装配置的插件
:BundleInstall!    update  更新
:BundleClean       remove plugin not in list 删除本地无用插件
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="vundle.png" src="/imgs/vim/vundle.png"/&gt;&lt;/p&gt;
&lt;h2 id="qi-ta"&gt;其他 …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;k-vim配置 &lt;a href="https://github.com/wklken/k-vim"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;第一个需要手动安装的插件, 其他的插件通过这个来进行管理&lt;/p&gt;
&lt;p&gt;作用: 管理其他所有插件(安装/更新/移除)&lt;/p&gt;
&lt;p&gt;github:&lt;a href="https://github.com/gmarik/Vundle.vim"&gt;vundle&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="an-zhuang"&gt;安装&lt;/h2&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vi
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="shi-yong"&gt;使用&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;.vimrc&lt;/code&gt;中加入/修改/删除自己需要的插件配置&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bundle 'scrooloose/syntastic'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后, 在命令行模式下运行&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:BundleInstall     install 安装配置的插件
:BundleInstall!    update  更新
:BundleClean       remove plugin not in list 删除本地无用插件
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="vundle.png" src="/imgs/vim/vundle.png"/&gt;&lt;/p&gt;
&lt;h2 id="qi-ta"&gt;其他&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;同类插件 &lt;a href="https://github.com/tpope/vim-pathogen"&gt;pathogen&lt;/a&gt;, &lt;a href="https://github.com/Shougo/neobundle.vim"&gt;neobundle&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依旧是同类插件, &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, 不过这个支持并行安装插件(目测如果是第一次配置机器会快很多....)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="vim"></category></entry><entry><title>分享一份 Vim 简介PPT</title><link href="http://www.wklken.me/posts/2015/05/10/vim-intro.html" rel="alternate"></link><published>2015-05-10T00:00:00+08:00</published><updated>2015-05-10T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-05-10:/posts/2015/05/10/vim-intro.html</id><summary type="html">&lt;p&gt;这是近期做团队分享的一份ppt, 原稿用&lt;code&gt;markdown&lt;/code&gt;仓促写的, 感谢&lt;code&gt;markdown&lt;/code&gt;及&lt;a href="https://github.com/onesuper/weakpoint"&gt;weakpoint&lt;/a&gt;, 可以直接将&lt;code&gt;markdown&lt;/code&gt;转成ppt&lt;/p&gt;
&lt;p&gt;这次分享主要不是讲vim, 更多的是关于工具的使用和思考&lt;/p&gt;
&lt;p&gt;其实, 无非是记住一些东西, 忘记一些东西, 定制和寻找适合自己的工具, 善用工具, 成为主人而不是奴隶&lt;/p&gt;
&lt;p&gt;将markdown原稿放出, 很多实操演示, 在文稿中是看不到的......&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim"&gt;vim&lt;/h2&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim_1"&gt;vim&lt;/h2&gt;
&lt;p&gt;曲线:&lt;/p&gt;
&lt;p&gt;&lt;img alt="learn-diff" src="/imgs/vim/learn_diff.jpg"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim_2"&gt;vim&lt;/h2&gt;
&lt;p&gt;Vim the Six Billion Dollar editor&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Better, Stronger, Faster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成为你最后一个使用的编辑器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="vim_3"&gt;vim&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;文本编辑器 , 不是IDE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;能做一些事情, 但是一些事情是做不到的, 不要强求, 该用IDE的时候, 用就是了&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="how"&gt;how&lt;/h2&gt;
&lt;p&gt;步骤:(简明 Vim …&lt;/p&gt;</summary><content type="html">&lt;p&gt;这是近期做团队分享的一份ppt, 原稿用&lt;code&gt;markdown&lt;/code&gt;仓促写的, 感谢&lt;code&gt;markdown&lt;/code&gt;及&lt;a href="https://github.com/onesuper/weakpoint"&gt;weakpoint&lt;/a&gt;, 可以直接将&lt;code&gt;markdown&lt;/code&gt;转成ppt&lt;/p&gt;
&lt;p&gt;这次分享主要不是讲vim, 更多的是关于工具的使用和思考&lt;/p&gt;
&lt;p&gt;其实, 无非是记住一些东西, 忘记一些东西, 定制和寻找适合自己的工具, 善用工具, 成为主人而不是奴隶&lt;/p&gt;
&lt;p&gt;将markdown原稿放出, 很多实操演示, 在文稿中是看不到的......&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim"&gt;vim&lt;/h2&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim_1"&gt;vim&lt;/h2&gt;
&lt;p&gt;曲线:&lt;/p&gt;
&lt;p&gt;&lt;img alt="learn-diff" src="/imgs/vim/learn_diff.jpg"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="vim_2"&gt;vim&lt;/h2&gt;
&lt;p&gt;Vim the Six Billion Dollar editor&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Better, Stronger, Faster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成为你最后一个使用的编辑器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="vim_3"&gt;vim&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;文本编辑器 , 不是IDE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;能做一些事情, 但是一些事情是做不到的, 不要强求, 该用IDE的时候, 用就是了&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="how"&gt;how&lt;/h2&gt;
&lt;p&gt;步骤:(简明 Vim 练级攻略)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;存活
感觉良好
觉得更好，更强，更快
使用VIM的超能力
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;诀窍:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;不断练习

肌肉记忆, 直觉-行动而不是思考-行动(十倍差距)
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="guo-cheng"&gt;过程:&lt;/h2&gt;
&lt;p&gt;一个vimer必定会经历的过程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;什么都没有, 纯vi&lt;/li&gt;
&lt;li&gt;什么都有&lt;/li&gt;
&lt;li&gt;只留适合自己的, 不适合自己也要配置成适合自己的&lt;/li&gt;
&lt;li&gt;什么都没有(听说)&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="target"&gt;target&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;实操: vim能做什么?&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;思考:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哪些是你常用编辑器可以实现的?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;哪些好的功能是你想要却没有的? 能否解决&lt;/li&gt;
&lt;li&gt;你的痛点在哪里?&lt;/li&gt;
&lt;li&gt;工作流&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="mo-shi"&gt;模式&lt;/h2&gt;
&lt;p&gt;&lt;img alt="vim-mode" src="https://github.com/wklken/gallery/blob/master/vim/vim-modes.png?raw=true"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="yi-dong-1"&gt;移动1&lt;/h2&gt;
&lt;p&gt;概览&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/wklken/gallery/blob/master/vim/vim-movement.png?raw=true"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="yi-dong-2"&gt;移动2&lt;/h2&gt;
&lt;p&gt;忘掉刚才那张图......&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="yi-dong-3"&gt;移动3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hjkl (请杜绝方向键, 移动右手到方向键区浪费时间)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;map &amp;lt;Left&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Right&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Up&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Down&amp;gt; &amp;lt;Nop&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单词: w / b / e (忘记: W/B/E-以空白为分隔符, 要多按shift键键/不好记/用得少)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行内: 0 / $  (忘记: ^, 够不着啊)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;段落: { / }&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="yi-dong-4"&gt;移动4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;页: \&amp;lt;ctrl-u&amp;gt; / \&amp;lt;ctrl-d&amp;gt; (忘记: ctrl-f/ctrl-b, 都在左侧键区左手太累, 经常是要上要下, 而不是往一个方向走)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可视范围: H M L (全部忘记, 没多大用, 要按shift, 混淆记忆)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件内: gg / G / :N (基本够了)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匹配处: % 括号匹配 /  # (忘记: *, 在键盘左侧, 太远不好敲, 可以交换#和*的功能)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更强大的, 看后面的插件部分&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="bian-ji"&gt;编辑&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;N\&amp;lt;action&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;x&lt;/li&gt;
&lt;li&gt;dd&lt;/li&gt;
&lt;li&gt;dw / db / d$ / dG / dgg&lt;/li&gt;
&lt;li&gt;yw / yb / y$&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;yy / p / P&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;J&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="che-xiao-he-zhong-fu"&gt;撤销和重复&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;u&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N\&amp;lt;command&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="xuan-zhong"&gt;选中&lt;/h2&gt;
&lt;p&gt;select&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;v:  vw / vb / vta / v$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;block select&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\&lt;ctrl+v\&gt; -&amp;gt; hjkl/\&amp;lt;ctrl+d&amp;gt;&lt;/ctrl+v\&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;行首加 / 行尾加&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="sou-suo"&gt;搜索&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;行内搜索: f / t (可以选择性遗忘t, 同时, 忘记F/T, 甚至可以忘记f, 你不需要)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么? 看后面的easy-motion插件&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="ti-huan"&gt;替换&lt;/h2&gt;
&lt;p&gt;记住这两个似乎够了(频率最高)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;:1,10s/a/b/g&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:%s/a/b/g&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符替换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rX&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="wen-ben-dui-xiang"&gt;文本对象&lt;/h2&gt;
&lt;p&gt;初学者基本不了解的一个特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\&amp;lt;action&amp;gt;a\&amp;lt;object&amp;gt;  or \&amp;lt;action&amp;gt;i\&amp;lt;object&amp;gt;&lt;/li&gt;
&lt;li&gt;a = all /  i = in&lt;/li&gt;
&lt;li&gt;action: d y v c&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;object:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;w(world) / s(sentence) / p{paragraph}
" ' ) ] }
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;装插件, 可以是: l(line) e(entire file)  i(indent)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="fen-ping"&gt;分屏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;:sp file1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:vsp file2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ctrl-w-h/j/k/l (改键 ctrl-h/j/k/l)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;ctrl-w-H/J/K/L&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-1-yu-fa-jian-cha"&gt;插件1: 语法检查&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/syntastic"&gt;syntastic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-2-zi-dong-bu-quan-yu-dai-ma-pian-duan"&gt;插件2: 自动补全与代码片段&lt;/h2&gt;
&lt;p&gt;两大效率神器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Valloric/YouCompleteMe"&gt;YCM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毫秒级补全/ python / c系等, 编译安装, 具体自行文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SirVer/ultisnips"&gt;ultisnips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honza/vim-snippets"&gt;vim-snippets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;括号补全&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Raimondi/delimitMate"&gt;delimimate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xml/html标签补全&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docunext/closetag.vim"&gt;closetag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-3-kuai-su-bian-ma"&gt;插件3: 快速编码&lt;/h2&gt;
&lt;p&gt;快速注释:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/nerdcommenter"&gt;nerdcommenter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速编辑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tpope/vim-repeat"&gt;vim-repeat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;去空格&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bronson/vim-trailing-whitespace"&gt;vim-trailing-whitespace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码对齐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junegunn/vim-easy-align"&gt;vim-easy-align&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-4-kuai-su-yun-xing"&gt;插件4: 快速运行&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thinca/vim-quickrun"&gt;vim-quickrun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-5-kuai-su-yi-dong"&gt;插件5: 快速移动&lt;/h2&gt;
&lt;p&gt;行/位置/搜索&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Lokaltog/vim-easymotion"&gt;vim-easymotion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mark&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kshenoy/vim-signature"&gt;vim-signature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-6-kuai-su-xuan-zhong"&gt;插件6: 快速选中&lt;/h2&gt;
&lt;p&gt;区块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/terryma/vim-expand-region"&gt;vim-expand-region&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多标签&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/terryma/vim-multiple-cursors"&gt;vim-multiple-cursors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="cha-jian-7-wen-jian-dao-hang-sou-suo"&gt;插件7: 文件导航/搜索&lt;/h2&gt;
&lt;p&gt;目录导航&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scrooloose/nerdtree"&gt;nerdtree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标签导航&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/majutsushi/tagbar"&gt;tagbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;搜索文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kien/ctrlp.vim"&gt;ctrlp.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;搜索代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dyng/ctrlsf.vim"&gt;ctrlsf.vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="guan-yu-cha-jian-1"&gt;关于插件1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;不是越多越好&lt;/li&gt;
&lt;li&gt;配了用不上 = 没配 + 浪费资源&lt;/li&gt;
&lt;li&gt;同一功能, 对比几个插件, 选择一个合适的&lt;/li&gt;
&lt;li&gt;快捷键配置一定要容易记&lt;/li&gt;
&lt;li&gt;相信我, 一个插件用的最多的快捷键就两个, 绝大多数情况下不会多于两个, 不用耗费心力在配置&lt;code&gt;更强大的&lt;/code&gt;操作上&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="guan-yu-cha-jian-2"&gt;关于插件2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;更符合自觉的键位/操作&lt;/li&gt;
&lt;li&gt;尽量减少敲击次数&lt;/li&gt;
&lt;li&gt;杜绝一切无效的敲击&lt;/li&gt;
&lt;li&gt;个性化, 定制到每个细节, 力争解决自己所有痛点&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="gao-ji"&gt;高级&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;怎么配置:&lt;/p&gt;
&lt;p&gt;参考下别人的vim配置, 读插件文档, 读插件代码, 必要时改一份&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="zi-yuan"&gt;资源&lt;/h2&gt;
&lt;p&gt;配置:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wklken/k-vim"&gt;k-vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/maximum-awesome"&gt;maximum-awsome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jianshu.com/p/bcbe916f97e1"&gt;vim 入门基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coolshell.cn/articles/5426.html"&gt;简明vim练级攻略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.kunli.info/2013/08/13/vim/"&gt;不要复杂化vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://segmentfault.com/blog/nightire/1190000000445598"&gt;vim 哲学&lt;/a&gt; 一个系列, 推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;others:
- &lt;a href="http://vimawesome.com/"&gt;插件库 vimawsome&lt;/a&gt;
- &lt;a href="http://vimcolors.com/"&gt;主题库 vim colors&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="qa"&gt;QA&lt;/h2&gt;
&lt;p&gt;Thx:)&lt;/p&gt;</content><category term="vim"></category></entry><entry><title>k-vim 更新9.0版本</title><link href="http://www.wklken.me/posts/2015/05/05/k-vim-update-v9.html" rel="alternate"></link><published>2015-05-05T00:00:00+08:00</published><updated>2015-05-05T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2015-05-05:/posts/2015/05/05/k-vim-update-v9.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/wklken/k-vim"&gt;直达链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;趁着近期有点时间, 将积累几个月的改进/痛点/更新等处理了一把, &lt;code&gt;k-vim&lt;/code&gt;正式更新到9.0版本.&lt;/p&gt;
&lt;p&gt;如果喜欢, 欢迎star/fork, 欢迎提pr.&lt;/p&gt;
&lt;p&gt;本次更新:  &lt;a href="https://github.com/wklken/k-vim/blob/master/UPDATE_LOG.md"&gt;完整更新日志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;```markdown 
    1. 新增依赖ag(the_silver_searcher)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;安装 [the_silver_searcher](https://github.com/ggreer/the_silver_searcher#installing)

具体见文档

2. 引入 thinca/vim-quickrun

    2.1 以message的方式展示, 同原先的F10行为, 按回车过掉消息
    2.2    F10 运行 / ,r  运行

2. 引入dyng/ctrlsf.vim, 类似 sublimetext的全局搜索

    2.1 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/wklken/k-vim"&gt;直达链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;趁着近期有点时间, 将积累几个月的改进/痛点/更新等处理了一把, &lt;code&gt;k-vim&lt;/code&gt;正式更新到9.0版本.&lt;/p&gt;
&lt;p&gt;如果喜欢, 欢迎star/fork, 欢迎提pr.&lt;/p&gt;
&lt;p&gt;本次更新:  &lt;a href="https://github.com/wklken/k-vim/blob/master/UPDATE_LOG.md"&gt;完整更新日志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;```markdown 
    1. 新增依赖ag(the_silver_searcher)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;安装 [the_silver_searcher](https://github.com/ggreer/the_silver_searcher#installing)

具体见文档

2. 引入 thinca/vim-quickrun

    2.1 以message的方式展示, 同原先的F10行为, 按回车过掉消息
    2.2    F10 运行 / ,r  运行

2. 引入dyng/ctrlsf.vim, 类似 sublimetext的全局搜索

    2.1 依赖于ag的全局搜索
    2.2 将光标挪到单词, 快捷键\  - 进入全局搜索, 移入分屏界面, o/t/T/q操作


3. 代码折叠

    3.1 &amp;lt;leader&amp;gt;zz 折叠/打开所有代码toggle(本次新增配置)
    3.2 za 当前光标所在区域折叠toggle(vim默认的)

4. syntastic语法检查

    4.1 修正语法检查错误高亮, 精确到具体错误单词
    4.2 开启python的pep8, 允许忽略某些warning, vimrc.bundles: line 40
    4.3 &amp;lt;leader&amp;gt;s  打开当前文件所有语法错误列表(新增配置)

5.  easymotion

    5.1 &amp;lt;leader&amp;gt;&amp;lt;leader&amp;gt;.  重复上一次easymotion命令, 更高效(新增配置)

6. 修改RainbowParentheses, 防止黑色括号出现

7. 修改vim-expand-region快捷键

    7.1 v 扩增选中范围
    7.2 V 缩小选中范围

8. 新增主题tomorrow
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;后面, 针对每个插件的使用, 之前笔记整理了一把, 后续逐步发出.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;另外, 开始在实际项目中更多的使用&lt;code&gt;golang&lt;/code&gt;, 最近在搞ELK日志收集统计系统,  做了一个收集任意端上报数据, 落地成日志文件, 然后经由logstash转存储到es.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wklken/http_json_logger"&gt;http_json_logger&lt;/a&gt;: 一个日志上报收集服务, 可以收集从浏览器/js/android/ios等通过http上报的日志, 落地为文本文件, 用作后续日志统计/分析/数据挖掘等. logger模块是使用&lt;code&gt;beego&lt;/code&gt;的logger模块精简后的, 这是第二个&lt;code&gt;golang&lt;/code&gt;项目, 上一个是下拉提示 &lt;a href="https://github.com/wklken/suggestion"&gt;suggestion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一个更新是, 花了两个小时, 给blog文章页面加了生成目录的功能,  另外搞了下阅读时左侧展示当前所在位置标题.(还无法支持响应式......)&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;度过了接近一年多的瓶颈期, 过去一年多可能是近几年迷茫和挣扎的一段时间,    眼睁睁看自己在某个地方卡住, 苦苦挣扎, 一步步往前, 这个过程是痛苦的, 独自成长, 一点点地去达成1万小时的目标&lt;/p&gt;
&lt;p&gt;随着时间流逝, 一切在逐渐明晰, 从测试转开发, 正式两年半了, 不短不长, 近期却有很多感悟. 或许, 该有些突破了吧.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;后续在自建wiki的同时, 提高blog的更新频率.&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;p&gt;2015-05-05 于深圳&lt;/p&gt;</content><category term="vim"></category></entry><entry><title>Vim相关资源</title><link href="http://www.wklken.me/posts/2014/10/03/vim-resources.html" rel="alternate"></link><published>2014-10-03T00:00:00+08:00</published><updated>2014-10-03T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2014-10-03:/posts/2014/10/03/vim-resources.html</id><summary type="html">&lt;h1 id="vimzi-yuan-lie-biao"&gt;Vim资源列表&lt;/h1&gt;
&lt;p&gt;之前在 &lt;a href="https://github.com/wklken/k-vim"&gt;k-vim&lt;/a&gt; 的readme中写了很多, 本次更新8.0版本后, 对其进行了梳理, 感觉放那并不合适, 所以迁过来这边:)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    .----------------.  .----------------.  .----------------.
    | .--------------. || .--------------. || .--------------. |
    | | ____   ____  | || |     _____    | || | ____    ____ | |
    | ||_  _| |_  _| | || |    |_   _|   | || ||_   \  /   _|| |
    | |  \ \   / /   | || |      | |     | || |  |   \/   |  | |
    | |   \ \ / /    | || |      | |     | || |  | |\  /| |  | |
    | |    \ ' /     | || |     _| |_    | || | _| |_\/_| |_ | |
    | |     \_/      | || |    |_____|   | || ||_____||_____|| |
    | |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="zi-yuan-ku"&gt;资源库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://u.memect.com/vim/"&gt;memect vim资源汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/communities/105049811056605918816"&gt;Google+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/vim/"&gt;reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimawesome.com/"&gt;插件库 vimawsome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimcolors.com/"&gt;主题库 vim colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tutorial"&gt;Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openvim.com/tutorial.html"&gt;openvim tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.vimgenius.com/"&gt;vim genius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vim-adventures.com/"&gt;vim大冒险&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://inside.github.io/vim-presentation/#/"&gt;一个很赞的ppt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tips"&gt;Tips …&lt;/h2&gt;</summary><content type="html">&lt;h1 id="vimzi-yuan-lie-biao"&gt;Vim资源列表&lt;/h1&gt;
&lt;p&gt;之前在 &lt;a href="https://github.com/wklken/k-vim"&gt;k-vim&lt;/a&gt; 的readme中写了很多, 本次更新8.0版本后, 对其进行了梳理, 感觉放那并不合适, 所以迁过来这边:)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    .----------------.  .----------------.  .----------------.
    | .--------------. || .--------------. || .--------------. |
    | | ____   ____  | || |     _____    | || | ____    ____ | |
    | ||_  _| |_  _| | || |    |_   _|   | || ||_   \  /   _|| |
    | |  \ \   / /   | || |      | |     | || |  |   \/   |  | |
    | |   \ \ / /    | || |      | |     | || |  | |\  /| |  | |
    | |    \ ' /     | || |     _| |_    | || | _| |_\/_| |_ | |
    | |     \_/      | || |    |_____|   | || ||_____||_____|| |
    | |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="zi-yuan-ku"&gt;资源库&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://u.memect.com/vim/"&gt;memect vim资源汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/communities/105049811056605918816"&gt;Google+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/vim/"&gt;reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimawesome.com/"&gt;插件库 vimawsome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimcolors.com/"&gt;主题库 vim colors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tutorial"&gt;Tutorial&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openvim.com/tutorial.html"&gt;openvim tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.vimgenius.com/"&gt;vim genius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vim-adventures.com/"&gt;vim大冒险&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://inside.github.io/vim-presentation/#/"&gt;一个很赞的ppt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vimbits.com/bits?sort=top"&gt;vimbits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.oberlin.edu/~kuperman/help/vim/home.html"&gt;vim tips and tricks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guo-nei-wen-zhang"&gt;国内文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://coolshell.cn/articles/5426.html"&gt;简明vim练级攻略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.kunli.info/2013/08/13/vim/"&gt;不要复杂化vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.jobbole.com/44891/"&gt;七个高效文本编辑习惯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edyfox.codecarver.org/html/vim_fileencodings_detection.html"&gt;vim fileencodings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jianshu.com/p/bcbe916f97e1"&gt;vim 入门基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://segmentfault.com/blog/nightire/1190000000445598"&gt;vim 哲学&lt;/a&gt; 一个系列, 推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guo-wai-wen-zhang"&gt;国外文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.moolenaar.net/habits.html"&gt;Seven habits of effective text editing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://benmccormick.org/learning-vim-in-2014/"&gt;learning vim in 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimcasts.org/"&gt;vimcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/"&gt;how to boost your vim productivity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mislav.uniqpath.com/2011/12/vim-revisited/"&gt;vim revisited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://huangjian.info/learn-vim-script/"&gt;learn vim script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="shi-pin"&gt;视频&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/search?q=vim"&gt;vimeo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/user1690209/videos"&gt;Derek Wyatt’s Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vimeo.com/vimlondon/videos"&gt;vim london&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/MinuteVimTricks/videos"&gt;minute vim tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://railscasts-china.com/episodes/rails-with-vim"&gt;rails with vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=YhqsjUUHj6g"&gt;vim as a python ide&lt;/a&gt; 对应 &lt;a href="https://speakerdeck.com/mbrochh/vim-as-a-python-ide"&gt;ppt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="qi-ta-vimpei-zhi"&gt;其他vim配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spf13/spf13-vim"&gt;spf13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/square/maximum-awesome"&gt;maximum-awsome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exvim/main"&gt;exvim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/carlhuda/janus"&gt;janus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mathiasbynens/dotfiles"&gt;dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sof"&gt;sof&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim"&gt;What is your most productive shortcut with Vim?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/726894/what-are-the-dark-corners-of-vim-your-mom-never-told-you-about"&gt;What are the dark corners of Vim your mom never told you about? &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="qi-ta"&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://learnvimscriptthehardway.stevelosh.com/"&gt;Learning vim the hard way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.swaroopch.com/notes/vim/#Introduction"&gt;A Byte of vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://painlessvim.com/"&gt;painless vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://derekwyatt.org/"&gt;derekwyatt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;BOOK: VIM 实用技巧&lt;/li&gt;
&lt;/ul&gt;</content><category term="vim"></category></entry><entry><title>[翻译]130+vim基本命令</title><link href="http://www.wklken.me/posts/2013/08/17/130-essential-vim-commands.html" rel="alternate"></link><published>2013-08-17T00:00:00+08:00</published><updated>2013-08-17T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2013-08-17:/posts/2013/08/17/130-essential-vim-commands.html</id><summary type="html">&lt;p&gt;文章  &lt;a href="http://www.catswhocode.com/blog/130-essential-vim-commands"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从八十年代起，vi和vim在程序员中十分流行.5年前，我写了《程序员必须知道的100个vim命令》，这是重写更新版本，希望你喜欢!&lt;/p&gt;
&lt;h3 id="ji-chu"&gt;基础&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:e filename     在编辑器中打开一个文件
:w              保存文件
:q              退出vim
:q!             退出但不保存
:x              写文件(如果有做修改)并退出
:sav filename   保存为
.               在正常模式中重复执行上一个变更
5.              重复五次
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yi-dong"&gt;移动&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;k or Up Arrow   上移一行
j or Down Arrow 下移一行
e               移动到单词末尾
b               移动到单词开头
0               移动到行首
G               移动到文件末尾
gg              移动到文件开头 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;文章  &lt;a href="http://www.catswhocode.com/blog/130-essential-vim-commands"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从八十年代起，vi和vim在程序员中十分流行.5年前，我写了《程序员必须知道的100个vim命令》，这是重写更新版本，希望你喜欢!&lt;/p&gt;
&lt;h3 id="ji-chu"&gt;基础&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:e filename     在编辑器中打开一个文件
:w              保存文件
:q              退出vim
:q!             退出但不保存
:x              写文件(如果有做修改)并退出
:sav filename   保存为
.               在正常模式中重复执行上一个变更
5.              重复五次
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yi-dong"&gt;移动&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;k or Up Arrow   上移一行
j or Down Arrow 下移一行
e               移动到单词末尾
b               移动到单词开头
0               移动到行首
G               移动到文件末尾
gg              移动到文件开头
L               移动到屏幕底
:59             移动到59行
20|             移动到第20列
%               移动到匹配的括号
[[              到函数头
[{              到块开始位置
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="jian-qie-fu-zhi-he-nian-tie"&gt;剪切，复制和粘贴&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;y   拷贝选中部分到剪贴板
p   粘贴剪贴板中内容
dd  剪切当前行
yy  拷贝当前行
y$  拷贝到行尾
D   剪切到行尾
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="sou-suo"&gt;搜索&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/word           从开头到结尾搜索单词word
?word           从结尾到卡头
*               搜索光标下单词
/\cstring       搜索string或STRING, 大小写不敏感
/jo[ha]n        搜索john 或 joan
/\&amp;lt; the         搜索以the开头的，the, theatre 或 then
/the\&amp;gt;          搜索以the结尾的，the 或 breathe
/\&amp;lt; the\&amp;gt;       搜索the
/\&amp;lt; ¦.\&amp;gt;        搜索所有含有四个字母的
/\/             搜索fred 但不是alfred 或 frederick
/fred\|joe      搜索fred 或 joe
/\&amp;lt;\d\d\d\d\&amp;gt;   搜索仅有四个数字的
/^\n\{3}        搜索连续3个空行的
:bufdo /searchstr/  在所有打开buf中搜索
bufdo %s/something/somethingelse/g  在所有打开buf中搜索并替换
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ti-huan"&gt;替换&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:%s/old/new/g           将所有出现的old替换为new
:%s/onward/forward/gi   将所有onward替换为forward，大小写不敏感
:%s/old/new/gc          替换前确认
:2,35s/old/new/g        将第2行到第35行之间的old替换为new
:5,$s/old/new/g         将第5行到文件结尾的old替换为new
:%s/^/hello/g           在每一行开头加入hello
:%s/$/Harry/g           在每一行结尾加入Harry
:%s/ *$//g              删除每行末尾无用空格
:g/string/d             删除所有包含string的行
:v/string/d             删除所有不包含string的行
:s/Bill/Steve/          替换当前行第一个Bill为Steve
:s/Bill/Steve/g         替换当前行中所有Bill
:%s/Bill/Steve/g        替换文件中所有Bill
:%s/^M//g               删掉DOS保存文件中(^M)
:%s/\r/\r/g             Transform DOS carriage returns in returns
:%s#&amp;lt;[^&amp;gt;]\+&amp;gt;##g         删除html标签但是保留文本
:%s/^\(.*\)\n\1$/\1/    删除所有连续出现过两次的行，保留一行
Ctrl+a                  递增光标下的数字
Ctrl+x                  递减光标下的数字
ggVGg?                  文本转换为 Rot13
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="da-xiao-xie"&gt;大小写&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Vu                  整行小写
VU                  整行大写
g~~                 整行大小写反转
vEU                 单词转为大写
vE~                 单词大小写反转
ggguG               所有文本小写
gggUG               所有文本大写
:set ignorecase     搜索中忽略大小写
:set smartcase      搜索中忽略大小写，除非搜索词中存在大小写字母
:%s/\&amp;lt;./\u&amp;amp;/g       将所有单词首字母大写
:%s/\&amp;lt;./\l&amp;amp;/g       将所有单词首字母小写
:%s/.*/\u&amp;amp;          将每行第一个字母大写
:%s/.*/\l&amp;amp;          将每行第一个字母小写
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="du-xie-wen-jian"&gt;读写文件&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:1,10 w outfile     1到10行内容写到outfile
:1,10 w &amp;gt;&amp;gt; outfile  1到10行内容追加到outfile
:r infile           插入文件内容
:23r infile         插入文件23行的内容
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="wen-jian-liu-lan-qi"&gt;文件浏览器&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:e .                打开完整文件浏览器
:Sex                切分窗口，打开文件浏览器
:Sex!               同上，垂直切分
:browse e           图像化文件浏览器
:ls                 列出buffers
:cd ..              移到上一层目录
:args               列出文件
:args *.php         打开文件列表
:grep expression *.php  返回包含expression的php文件列表
gf                  打开光标下文件名对应的文件
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="he-unixjiao-hu"&gt;和Unix交互&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:!pwd               执行pwd命令，返回结果
!!pwd               执行命令并插入结果到文件中
:sh                 临时返回unix
$exit               从unix中返回vim
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="dui-qi"&gt;对齐&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:%!fmt              所有行对齐
!}fmt               当前位置所有行对齐
5!!fmt              后五行对齐
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="tabshe-windows"&gt;Tabs和Windows&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:tabnew             创建一个新的tab
gt                  展示下一个tab
:tabfirst           展示第一个tab
:tablast            展示最后一个tag
:tabm n(position)   重排tab
:tabdo %s/foo/bar/g 在所有tab中执行一个命令
:tab ball           将所有打开文件放入tab中
:new abc.txt        在新window中编辑abc.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="chuang-kou-fen-ping"&gt;窗口分屏&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:e filename         在当前窗口中编辑文件
:split filename     切分当前窗口并打开文件(缩写 :sp filename)
ctrl-w up arrow     移到上一个文件
ctrl-w ctrl-w       移到下一个窗口
ctrl-w_             当前窗口垂直最大化
ctrl-w|             当前窗口水平最大化
ctrl-w=             所有窗口等大小
10 ctrl-w+          当前窗口增加10行
:vsplit file        竖直切分窗口
:sview file         同:split, 只读模式
:hide               关闭当前窗口
:­nly               关闭出了当前窗口之外的所有窗口
:b 2                打开2号窗口
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="zi-dong-bu-quan"&gt;自动补全&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ctrl+n Ctrl+p (插入模式)  补全单词
Ctrl+x Ctrl+l           补全行
:set dictionary=dict    定义dict为dictionnary
Ctrl+x Ctrl+k           用字典中内容补全
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="biao-qian"&gt;标签&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;m {a-z}                 在当前位置做标签{a-z}
' {a-z}                 移动到标签位置
''                      移动到上一个位置
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="suo-xie"&gt;缩写&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:ab mail mail@provider.org      定义mail 作为 mail@provider.org的缩写
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="wen-ben-suo-jin"&gt;文本缩进&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:set autoindent         打开自动缩进
:set smartindent        打开自动智能缩进
:set shiftwidth=4       缩进设为4个空格
ctrl-t, ctrl-d          插入模式中缩进/去缩进
&amp;gt;&amp;gt;                      缩进
&amp;lt;&amp;lt;                      去缩进
=%                      缩进括号中的代码
1GVG=                   缩进整个文件
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="yu-fa-gao-liang"&gt;语法高亮&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;:syntax on              打开语法高亮
:syntax off             关闭语法高亮
:set syntax=perl        强制语法高亮
&lt;/pre&gt;&lt;/div&gt;</content><category term="vim"></category></entry></feed>