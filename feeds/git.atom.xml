<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wklken's blog - git</title><link href="http://www.wklken.me/" rel="alternate"></link><link href="http://www.wklken.me/feeds/git.atom.xml" rel="self"></link><id>http://www.wklken.me/</id><updated>2013-12-01T00:00:00+08:00</updated><entry><title>Git操作小结</title><link href="http://www.wklken.me/posts/2013/12/01/git-base.html" rel="alternate"></link><published>2013-12-01T00:00:00+08:00</published><updated>2013-12-01T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2013-12-01:/posts/2013/12/01/git-base.html</id><summary type="html">&lt;p&gt;git操作小结，资料来源于网络&lt;/p&gt;
&lt;h3 id="jiao-cheng-zi-yuan"&gt;教程资源&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在线教程(重点推荐)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://try.github.io/levels/1/challenges/1"&gt;TryGit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pcottle.github.io/learnGitBranching/"&gt;LearnGitBranchin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gitbook.io/book/lvwzhen/Git-Tutorial"&gt;廖雪峰git教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Gazler/githug"&gt;githug&lt;/a&gt; (通关游戏，&lt;a href="http://fancyoung.com/blog/githug-cheat-sheet/"&gt;攻略&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.atlassian.com/git/tutorial/git-basics"&gt;Git Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gitimmersion.com/"&gt;Git Immersion&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;资源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://gitref.org/zh/basic/"&gt;Git 参考手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://git-scm.com/book/zh"&gt;Pro git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://chimera.labs.oreilly.com/books/1230000000561/index.html"&gt;Git Pocket Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ikandou.com/io/book/48272048/"&gt;git自下而上方法-爱看豆&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://blog.jobbole.com/50603/"&gt;写给Git初学者的7个建议&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rogerdudler.github.io/git-guide/index.zh.html"&gt;git简易指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://marklodato.github.io/visual-git-guide/index-zh-cn.html"&gt;图解git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://youngsterxyf.github.io/2013/09/28/learning-git-internals-by-example/"&gt;通过示例学习git构造&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ruanyifeng.com/blog/2012/07/git.html"&gt;git分支管理策略&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://luolei.org/2013/09/git-config-advanced/"&gt;Git log diff config高级进阶&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.oschina.net/translate/10-useful-advanced-git-commands"&gt;10个很有用的高级git命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ux.etao.com/posts/711"&gt;高富帅们的git技巧&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.jobbole.com/43288/"&gt;一些实用的GitHub模式&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="git-config"&gt;git config&lt;/h3&gt;
&lt;p&gt;git配置文件~/.gitconfig&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#查看帮助
git config --help

git config --global user.name …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;git操作小结，资料来源于网络&lt;/p&gt;
&lt;h3 id="jiao-cheng-zi-yuan"&gt;教程资源&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在线教程(重点推荐)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://try.github.io/levels/1/challenges/1"&gt;TryGit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pcottle.github.io/learnGitBranching/"&gt;LearnGitBranchin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gitbook.io/book/lvwzhen/Git-Tutorial"&gt;廖雪峰git教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Gazler/githug"&gt;githug&lt;/a&gt; (通关游戏，&lt;a href="http://fancyoung.com/blog/githug-cheat-sheet/"&gt;攻略&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.atlassian.com/git/tutorial/git-basics"&gt;Git Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://gitimmersion.com/"&gt;Git Immersion&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;资源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://gitref.org/zh/basic/"&gt;Git 参考手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://git-scm.com/book/zh"&gt;Pro git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://chimera.labs.oreilly.com/books/1230000000561/index.html"&gt;Git Pocket Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ikandou.com/io/book/48272048/"&gt;git自下而上方法-爱看豆&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://blog.jobbole.com/50603/"&gt;写给Git初学者的7个建议&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rogerdudler.github.io/git-guide/index.zh.html"&gt;git简易指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://marklodato.github.io/visual-git-guide/index-zh-cn.html"&gt;图解git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://youngsterxyf.github.io/2013/09/28/learning-git-internals-by-example/"&gt;通过示例学习git构造&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ruanyifeng.com/blog/2012/07/git.html"&gt;git分支管理策略&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://luolei.org/2013/09/git-config-advanced/"&gt;Git log diff config高级进阶&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.oschina.net/translate/10-useful-advanced-git-commands"&gt;10个很有用的高级git命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ux.etao.com/posts/711"&gt;高富帅们的git技巧&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.jobbole.com/43288/"&gt;一些实用的GitHub模式&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="git-config"&gt;git config&lt;/h3&gt;
&lt;p&gt;git配置文件~/.gitconfig&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#查看帮助
git config --help

git config --global user.name "Your Name Here"

其他常用config
git config --global user.name "robbin"
git config --global user.email "fankai#gmail.com"
git config --global color.ui true

#alias
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch

git config --global core.editor "mate -w"    # 设置Editor使用textmate
git config -1 #列举所有配置
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="cang-ku-ji-ben-cao-zuo"&gt;仓库基本操作&lt;/h3&gt;
&lt;p&gt;1.检出一个项目&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone path-to-git-repository
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.更新本地仓库到最新改动&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git pull
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.将现有项目推送到远程&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd test   #跳到要提交的目录下
git init  #初始化git
git add . #将所有文件加入到索引
git commit #提交到HEAD
git remote add origin &amp;lt;server&amp;gt; #增加到remote
git push origin master #推送过去! DONE
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.丢弃本地所有改动与提交，获取服务器上最新版本并将主干分支指向它&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git fetch origin
git reset --hard origin/master
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ji-ben-cao-zuo"&gt;基本操作&lt;/h3&gt;
&lt;p&gt;&lt;img alt="git-flow-structure" src="/imgs/git-base/git-flow-structure.png"/&gt;&lt;/p&gt;
&lt;p&gt;1.添加(CurrentDir -&amp;gt; Stage)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add file_name
git add *
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.删除(CurrentDir -&amp;gt; Stage)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git rm file_name  #从版本控制中删除，并删除磁盘上的文件
git rm --cached file_name #不删除磁盘上的
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.取消add/rm(Stage -&amp;gt; CurrentDir)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git reset HEAD file_name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.提交(Stage -&amp;gt; HEAD)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git commit file_name -m '提交信息'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.推送改动(HEAD -&amp;gt; Remote)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.diff&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git diff  #diff CurrentDir Stage, 查看有哪些需要add
git diff --cached/--staged     #哪些需要commit
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.log&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git log  #查看日志
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7.替换掉本地改动(Stage -&amp;gt; CurrentDir)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout -- &amp;lt;filename&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;8.mv&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git mv old_name new_name #重命名
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;BEGIN: add -&amp;gt; commit -&amp;gt; push -&amp;gt; DONE&lt;/p&gt;
&lt;p&gt;文件变化状态图&lt;/p&gt;
&lt;p&gt;&lt;img alt="git-file-status-lifecycle" src="/imgs/git-base/git-file-status-lifecycle.png"/&gt;&lt;/p&gt;
&lt;h3 id="fen-zhi-cao-zuo"&gt;分支操作&lt;/h3&gt;
&lt;p&gt;&lt;img alt="git-branch" src="/imgs/git-base/git-branch.png"/&gt;&lt;/p&gt;
&lt;p&gt;1.创建分支&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git branch new_br_name #创建
git branch             #查看当前有的分支

git checkout new_br_name #切换到新分支

git checkout -b new_br_name #创建并切过去
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.远程分支&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git push origin new_br_name  #推送branch到远端维护起来

#删除
git push origin : &amp;lt;new_br_name&amp;gt;
or
git push origin --delete &amp;lt;new_br_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.合并分支(merge)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git branch  #查看当前分支
git checkout master #切换回主干
git merge new_br_name  #合并new_br_name分支到主干, 自动合并

1.没冲突(no conflicts) -&amp;gt; fine -&amp;gt; commit -&amp;gt; push to remote

2.有冲突(conflicts)
git diff   #查看当前哪些文件有冲突, 标识 unmerged
vim xxx    #手动编辑解决冲突

    冲突文件中标识
    &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD:file.txt
    Hello world  #当前branch的
    =======
    Goodbye      #要合并branch的
    &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 77976da35a11db4580b80ae27e8d65caf5208086:file.txt

git add xxx #加入

-&amp;gt; 解决所有冲突之后 -&amp;gt; commit -&amp;gt; push to remote
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.删除无用分支&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git branch -d new_br_name  #只能删除已经被当前分支合并的分支
git branch -D new_br_name  #强删
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.撤销一个合并&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git reset --hard HEAD
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="tagcao-zuo"&gt;tag操作&lt;/h3&gt;
&lt;p&gt;BP:在发布之前，创建标签&lt;/p&gt;
&lt;p&gt;1.创建删除&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;创建
git tag tag_name &amp;lt;commit ID&amp;gt; #commit ID可以通过git log来查看

删除
git tag -d tag_name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.远程tag&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;推送所有tags
git push --tags

删除
git push origin --delete tag &amp;lt;tag_name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="hu-lue-mou-xie-wen-jian"&gt;忽略某些文件&lt;/h3&gt;
&lt;p&gt;项目中那些不需要的文件(untracked),可以忽略&lt;/p&gt;
&lt;p&gt;顶层工作目录中添加一个叫".gitignore"的文件 &lt;a href="https://www.kernel.org/pub/software/scm/git/docs/gitignore.html"&gt;语法文档&lt;/a&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 以'#' 开始的行，被视为注释.
# 忽略掉所有文件名是 foo.txt 的文件.
foo.txt
# 忽略所有生成的 html 文件,
*.html
# foo.html是手工维护的，所以例外.
!foo.html
#  忽略所有.o 和 .a文件.
*.[oa]
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="chang-jian-wen-ti"&gt;常见问题&lt;/h3&gt;
&lt;p&gt;1.如何让git能处理汉字文件名&lt;/p&gt;
&lt;p&gt;git默认quote任何非ascii文件名字符,想要支持非&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global core.quotepath false

或者在$HOME/.gitconfig 配置
[core]
    quotepath = false
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.git add -A 和 git add .的区别&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;"git add -A"  = "git add .; git add -u".

- git add -A stages All
- git add . stages new and modified, without deleted
- git add -u stages modified and deleted, without new
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.怎么配置git结果显示颜色&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[color]&lt;/span&gt;
&lt;span class="c1"&gt;#开启着色功能&lt;/span&gt;
    &lt;span class="na"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;auto&lt;/span&gt;
&lt;span class="s"&gt;    diff = auto&lt;/span&gt;
&lt;span class="s"&gt;    branch = auto&lt;/span&gt;
&lt;span class="s"&gt;    interactive = auto&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4.获得帮助&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git help &amp;lt;command&amp;gt;  # 显示command的help
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="qi-ta"&gt;其他&lt;/h3&gt;
&lt;p&gt;1.&lt;a href="http://luolei.org/2013/08/better-git-log/"&gt;更好的git log&lt;/a&gt;&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset' --abbrev-commit"
#然后使用 git lg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.自己搭建代码库&lt;/p&gt;
&lt;p&gt;类似github的应用，gitlab(google之)&lt;/p&gt;
&lt;p&gt;3.git-flow&lt;/p&gt;
&lt;p&gt;&lt;a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html"&gt;git-flow备忘清单&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.基于git的wiki&lt;/p&gt;
&lt;p&gt;gollum(google之)&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;p&gt;2013-12-01&lt;/p&gt;</content><category term="git"></category></entry></feed>